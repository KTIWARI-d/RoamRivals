{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamlendu Kumar\\\\Desktop\\\\projects\\\\node\\\\roamrivals-frontend\\\\src\\\\components\\\\Payment\\\\PaymentButton.js\";\n// src/components/Payment/PaymentButton.js\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentButton = ({\n  amount,\n  currency,\n  receipt\n}) => {\n  const handlePayment = async () => {\n    try {\n      const order = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\n        amount,\n        currency\n      });\n      const options = {\n        key: \"rzp_test_GxKMcLGFTXnqXU\",\n        amount: order.data.amount,\n        currency: order.data.currency,\n        name: \"RoamRivals\",\n        description: \"Competition Registration\",\n        order_id: order.data.id,\n        handler: async response => {\n          const paymentId = response.razorpay_payment_id;\n          const orderId = response.razorpay_order_id;\n          const signature = response.razorpay_signature;\n\n          // Verify payment on the backend\n          await axios.post(\"http://localhost:5000/api/payment/verify\", {\n            paymentId,\n            orderId,\n            signature\n          });\n          alert(\"Payment successful\");\n        },\n        prefill: {\n          name: \"Kamlendu Kumar\",\n          email: \"kamlendukumar4480@college.edu\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      console.error(err);\n      alert(\"Payment failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlePayment,\n    children: \"Pay Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_c = PaymentButton;\nexport default PaymentButton;\nvar _c;\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PaymentButton","amount","currency","receipt","handlePayment","order","post","options","key","data","name","description","order_id","id","handler","response","paymentId","razorpay_payment_id","orderId","razorpay_order_id","signature","razorpay_signature","alert","prefill","email","theme","color","rzp","window","Razorpay","open","err","console","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kamlendu Kumar/Desktop/projects/node/roamrivals-frontend/src/components/Payment/PaymentButton.js"],"sourcesContent":["// src/components/Payment/PaymentButton.js\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PaymentButton = ({ amount, currency, receipt }) => {\r\n  const handlePayment = async () => {\r\n    try {\r\n      const order = await axios.post(\r\n        \"http://localhost:5000/api/payment/create-order\",\r\n        {\r\n          amount,\r\n          currency,\r\n        }\r\n      );\r\n\r\n      const options = {\r\n        key: \"rzp_test_GxKMcLGFTXnqXU\",\r\n        amount: order.data.amount,\r\n        currency: order.data.currency,\r\n        name: \"RoamRivals\",\r\n        description: \"Competition Registration\",\r\n        order_id: order.data.id,\r\n        handler: async (response) => {\r\n          const paymentId = response.razorpay_payment_id;\r\n          const orderId = response.razorpay_order_id;\r\n          const signature = response.razorpay_signature;\r\n\r\n          // Verify payment on the backend\r\n          await axios.post(\"http://localhost:5000/api/payment/verify\", {\r\n            paymentId,\r\n            orderId,\r\n            signature,\r\n          });\r\n\r\n          alert(\"Payment successful\");\r\n        },\r\n        prefill: {\r\n          name: \"Kamlendu Kumar\",\r\n          email: \"kamlendukumar4480@college.edu\",\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\",\r\n        },\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Payment failed\");\r\n    }\r\n  };\r\n\r\n  return <button onClick={handlePayment}>Pay Now</button>;\r\n};\r\n\r\nexport default PaymentButton;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACvD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC5B,gDAAgD,EAChD;QACEL,MAAM;QACNC;MACF,CACF,CAAC;MAED,MAAMK,OAAO,GAAG;QACdC,GAAG,EAAE,yBAAyB;QAC9BP,MAAM,EAAEI,KAAK,CAACI,IAAI,CAACR,MAAM;QACzBC,QAAQ,EAAEG,KAAK,CAACI,IAAI,CAACP,QAAQ;QAC7BQ,IAAI,EAAE,YAAY;QAClBC,WAAW,EAAE,0BAA0B;QACvCC,QAAQ,EAAEP,KAAK,CAACI,IAAI,CAACI,EAAE;QACvBC,OAAO,EAAE,MAAOC,QAAQ,IAAK;UAC3B,MAAMC,SAAS,GAAGD,QAAQ,CAACE,mBAAmB;UAC9C,MAAMC,OAAO,GAAGH,QAAQ,CAACI,iBAAiB;UAC1C,MAAMC,SAAS,GAAGL,QAAQ,CAACM,kBAAkB;;UAE7C;UACA,MAAMxB,KAAK,CAACS,IAAI,CAAC,0CAA0C,EAAE;YAC3DU,SAAS;YACTE,OAAO;YACPE;UACF,CAAC,CAAC;UAEFE,KAAK,CAAC,oBAAoB,CAAC;QAC7B,CAAC;QACDC,OAAO,EAAE;UACPb,IAAI,EAAE,gBAAgB;UACtBc,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MAED,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACtB,OAAO,CAAC;MACxCoB,GAAG,CAACG,IAAI,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBT,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF,CAAC;EAED,oBAAOvB,OAAA;IAAQmC,OAAO,EAAE9B,aAAc;IAAA+B,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACzD,CAAC;AAACC,EAAA,GAlDIxC,aAAa;AAoDnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}